# See slapd.conf(5) for details on configuration options. This file should NOT be world readable.
include     /opt/homebrew/etc/openldap/schema/core.schema
include     /opt/homebrew/etc/openldap/schema/cosine.schema
include     /opt/homebrew/etc/openldap/schema/nis.schema
include     /opt/homebrew/etc/openldap/schema/inetorgperson.schema

# Define global ACLs to disable default read access.
# Do not enable referrals until AFTER you have a working directory  service AND an understanding of referrals.
#referral	ldap://root.openldap.org
pidfile		/opt/homebrew/var/run/slapd.pid
argsfile	/opt/homebrew/var/run/slapd.args

# Load dynamic backend modules:
modulepath	/opt/homebrew/Cellar/openldap/2.6.3/libexec/openldap
moduleload	back_mdb.la
# moduleload	back_ldap.la

# config database definitions
database    config
# Uncomment the rootpw line to allow binding as the cn=config rootdn so that temporary modifications to the
# configuration can be made while slapd is running. They will not persist across a restart.
database    ldif
suffix      "dc=localuaa,dc=test"
rootdn      "cn=admin,dc=localuaa,dc=test"
# Cleartext passwords, especially for the rootdn, should be avoided, see slappasswd(8) and slapd.conf(5) for details.
# Use of strong authentication encouraged.
rootpw      {SSHA}7e+zIbbJkC++wF3bUnrbXLPDlS6ancY5
# The database directory MUST exist prior to running slapd AND should only be accessible by the slapd and slap tools.
# Mode 700 recommended.
directory	/opt/homebrew/var/openldap-data

# monitor database definitions
database monitor

# Sample security restrictions
#	Require integrity protection (prevent hijacking)
#	Require 112-bit (3DES or better) encryption for updates
#	Require 63-bit encryption for simple bind
# security ssf=1 update_ssf=112 simple_bind=64

# Sample access control policy:
#	Root DSE: allow anyone to read it
#	Subschema (sub)entry DSE: allow anyone to read it
#	Other DSEs:
#		Allow self write access
#		Allow authenticated users read access
#		Allow anonymous users to authenticate
#	Directives needed to implement policy:
# access to dn.base="" by * read
# access to dn.base="cn=Subschema" by * read
# access to *
#	by self write
#	by users read
#	by anonymous auth
#
# if no access controls are present, the default policy
# allows anyone and everyone to read anything but restricts
# updates to rootdn.  (e.g., "access to * by * read")
#
# rootdn can always read and write EVERYTHING!
