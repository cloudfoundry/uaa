# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: Bash@3
  displayName: Changing Dash to Bash shell
  inputs:
    targetType: 'inline'
    script: |
      echo 'Current Bash'
      ls -l /bin/sh
      sudo rm /bin/sh
      sudo ln -s /bin/bash /bin/sh
      echo 'Updated Bash'
      ls -l /bin/sh

- task: Gradle@2
  displayName: Gradle Build
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    tasks: 'build --exclude-task test'

- task: Bash@3
  displayName: Running Unit Tests with Docker 
  inputs:
    targetType: 'inline'
    script: 'sh run-unit-tests-ci.sh postgresql'

- task: Bash@3
  displayName: Running Integration Tests with Docker 
  inputs:
    targetType: 'inline'
    script: 'sh run-integration-tests-ci.sh postgresql'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    publishLocation: 'pipeline'