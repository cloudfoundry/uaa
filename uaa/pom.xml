<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.cloudfoundry.runtime</groupId>
		<artifactId>cloudfoundry-identity-parent</artifactId>
		<version>1.0.0.BUILD-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<artifactId>cloudfoundry-identity-uaa</artifactId>
	<packaging>war</packaging>
	<name>User Account and Authentication Service</name>
	<description>User Account and Authentication Service</description>

	<properties>
		<m2eclipse.wtp.contextRoot>/uaa</m2eclipse.wtp.contextRoot>
		<uaa.path>/uaa</uaa.path>
		<CLOUD_FOUNDRY_CONFIG_PATH></CLOUD_FOUNDRY_CONFIG_PATH>
	</properties>

	<profiles>
		<profile>
			<id>cloud</id>
			<properties>
				<CLOUD_FOUNDRY_CONFIG_PATH>src/test/resources/test/profiles/devuaa</CLOUD_FOUNDRY_CONFIG_PATH>
			</properties>
		</profile>
		<profile>
			<id>vcap</id>
			<properties>
				<CLOUD_FOUNDRY_CONFIG_PATH>src/test/resources/test/profiles/vcap</CLOUD_FOUNDRY_CONFIG_PATH>
				<uaa.path>/</uaa.path>
			</properties>
		</profile>
		<profile>
			<!-- Use this profile in conjunction with 'integration' profile to run tests against a legacy mode server -->
			<id>legacy</id>
			<properties>
				<CLOUD_FOUNDRY_CONFIG_PATH>src/test/resources/test/profiles/mocklegacy</CLOUD_FOUNDRY_CONFIG_PATH>
			</properties>
		</profile>
		<profile>
			<id>integration</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>tomcat-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>start-tomcat</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<fork>true</fork>
									<systemProperties>
										<CLOUD_FOUNDRY_CONFIG_PATH>${CLOUD_FOUNDRY_CONFIG_PATH}</CLOUD_FOUNDRY_CONFIG_PATH>
									</systemProperties>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<executions>
							<execution>
								<id>surefire-it</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
							<execution>
								<id>default-test</id>
								<phase>test</phase>
								<configuration>
									<skip>true</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-sql</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<typedef resource="foundrylogic/vpp/typedef.properties" />
								<taskdef resource="foundrylogic/vpp/taskdef.properties" />
								<vppcopy todir="${basedir}/target/generated-resources" overwrite="true">
									<config>
										<context>
											<property key="includes" value="src/main/sql" />
											<property file="${basedir}/src/main/sql/hsqldb.properties" />
										</context>
										<engine>
											<property key="velocimacro.library" value="src/main/sql/hsqldb.vpp" />
										</engine>
									</config>
									<fileset dir="${basedir}/src/main/sql" includes="schema*.sql.vpp" />
									<mapper type="glob" from="*.sql.vpp" to="*-hsqldb.sql" />
								</vppcopy>
								<vppcopy todir="${basedir}/target/generated-resources" overwrite="true">
									<config>
										<context>
											<property key="includes" value="src/main/sql" />
											<property file="${basedir}/src/main/sql/postgresql.properties" />
										</context>
										<engine>
											<property key="velocimacro.library" value="src/main/sql/postgresql.vpp" />
										</engine>
									</config>
									<fileset dir="${basedir}/src/main/sql" includes="schema*.sql.vpp" />
									<mapper type="glob" from="*.sql.vpp" to="*-postgresql.sql" />
								</vppcopy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tomcat-maven-plugin</artifactId>
					<configuration>
						<path>${uaa.path}</path>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.11</version>
					<configuration>
						<skip>${skipTests}</skip>
						<includes>
							<include>**/*Tests.java</include>
						</includes>
						<excludes>
							<exclude>**/Abstract*.java</exclude>
						</excludes>
						<systemPropertyVariables>
							<CLOUD_FOUNDRY_CONFIG_PATH>${CLOUD_FOUNDRY_CONFIG_PATH}</CLOUD_FOUNDRY_CONFIG_PATH>
						</systemPropertyVariables>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<executions>
						<execution>
							<id></id>
							<phase>install</phase>
							<goals>
								<goal>install-file</goal>
							</goals>
							<inherited>false</inherited>
							<configuration>
								<file>target/${pom.artifactId}-${pom.version}.war</file>
								<groupId>${pom.groupId}</groupId>
								<artifactId>uaa</artifactId>
								<version>${pom.version}</version>
								<packaging>war</packaging>
								<generatePom>true</generatePom>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<pluginRepositories>
		<pluginRepository>
			<id>objectstyle</id>
			<name>ObjectStyle.org Repository</name>
			<url>http://objectstyle.org/maven2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-jwt</artifactId>
			<version>${spring.security.jwt.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-admin-manager</artifactId>
			<version>1.2.1.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
			<version>${spring.security.oauth.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.8.3</version>
		</dependency>

		<dependency>
			<groupId>edu.vt.middleware</groupId>
			<artifactId>vt-password</artifactId>
			<version>3.1.1</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.1.2</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.9</version>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb-j5</artifactId>
			<version>2.0.0</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc3</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>

		<!-- Only needed for CC token serialization PoC -->
		<dependency>
			<groupId>org.jruby</groupId>
			<artifactId>jruby</artifactId>
			<version>1.6.5</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

</project>
