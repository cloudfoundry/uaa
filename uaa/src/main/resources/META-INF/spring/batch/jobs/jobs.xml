<?xml version="1.0" encoding="UTF-8"?>
<!-- Cloud Foundry 2012.02.03 Beta Copyright (c) [2009-2012] VMware, Inc. All Rights Reserved. This product is licensed to 
	you under the Apache License, Version 2.0 (the "License"). You may not use this product except in compliance with the License. 
	This product includes a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents 
	is subject to the terms and conditions of the subcomponent's license, as noted in the LICENSE file. -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<job id="testJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="emptyStep">
			<tasklet ref="resourceService" method="getServletPath" />
		</step>
	</job>

	<job id="userDataMigrationJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="copyDataStep" next="migrateAdminUsers">
			<tasklet>
				<chunk reader="cloudControllerUserReader" processor="cloudControllerUserProcessor" writer="uaaUserWriter"
					commit-interval="100" skip-limit="100">
					<skippable-exception-classes>
						<include class="org.cloudfoundry.identity.uaa.scim.job.InvalidEmailException" />
					</skippable-exception-classes>
				</chunk>
			</tasklet>
		</step>
		<step id="migrateAdminUsers" parent="adminUsersStep" />
	</job>

	<job id="userDataBackwardsJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="copyBackwardsDataStep">
			<tasklet>
				<chunk reader="uaaUserReader" processor="uaaUserProcessor" writer="cloudControllerUserWriter"
					commit-interval="100" skip-limit="100">
					<skippable-exception-classes>
						<include class="org.cloudfoundry.identity.uaa.scim.job.InvalidEmailException" />
					</skippable-exception-classes>
				</chunk>
			</tasklet>
		</step>
	</job>

	<job id="updateAdminUsersJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="updateAdminUsers" parent="adminUsersStep" />
	</job>

	<job id="userDataSyncJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="syncDataStep">
			<tasklet>
				<chunk reader="cloudControllerUserSyncReader" processor="lastModifiedFilter" writer="uaaPasswordUpdater"
					commit-interval="100" skip-limit="100">
					<skippable-exception-classes>
						<include class="org.cloudfoundry.identity.uaa.scim.job.InvalidEmailException" />
					</skippable-exception-classes>
				</chunk>
			</tasklet>
		</step>
	</job>

	<step id="adminUsersStep" xmlns="http://www.springframework.org/schema/batch">
		<tasklet>
			<bean xmlns="http://www.springframework.org/schema/beans" class="org.cloudfoundry.identity.uaa.scim.job.AdminUsersTasklet"
				scope="step">
				<property name="dataSource" ref="uaaDataSource" />
				<property name="admins">
					<value>#{new String(jobParameters['users']?:'').split(',')}</value>
				</property>
				<property name="authority" value="#{jobParameters['authority']?:'ROLE_ADMIN'}"></property>
			</bean>
		</tasklet>
	</step>

	<bean id="cloudControllerUserReader" class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
		<property name="dataSource" ref="cloudControllerDataSource" />
		<property name="parameterValues">
			<map>
				<entry key="id" value="#{jobParameters['minId']?:0}" />
			</map>
		</property>
		<property name="queryProvider">
			<bean class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
				<property name="dataSource" ref="cloudControllerDataSource" />
				<property name="selectClause" value="*" />
				<property name="fromClause" value="users" />
				<property name="whereClause" value="id>=:id" />
				<property name="sortKey" value="id" />
			</bean>
		</property>
		<property name="rowMapper">
			<bean class="org.springframework.jdbc.core.ColumnMapRowMapper" />
		</property>
	</bean>

	<bean id="uaaUserReader" class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
		<property name="dataSource" ref="uaaDataSource" />
		<property name="parameterValues">
			<map>
				<entry key="created" value="#{jobParameters['start.date']?:0}" />
			</map>
		</property>
		<property name="queryProvider">
			<bean class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
				<property name="dataSource" ref="uaaDataSource" />
				<property name="selectClause" value="*" />
				<property name="fromClause" value="users" />
				<property name="whereClause" value="created>=:created" />
				<property name="sortKey" value="created" />
			</bean>
		</property>
		<property name="rowMapper">
			<bean class="org.springframework.jdbc.core.ColumnMapRowMapper" />
		</property>
	</bean>

	<bean id="cloudControllerUserSyncReader" class="org.springframework.batch.item.database.JdbcPagingItemReader"
		scope="step">
		<property name="dataSource" ref="cloudControllerDataSource" />
		<property name="parameterValues">
			<map>
				<entry key="start.date" value="#{jobParameters['start.date']}" />
			</map>
		</property>
		<property name="queryProvider">
			<bean class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
				<property name="dataSource" ref="cloudControllerDataSource" />
				<property name="selectClause" value="*" />
				<property name="fromClause" value="users" />
				<property name="whereClause" value="updated_at>=:start.date" />
				<property name="sortKey" value="updated_at" />
			</bean>
		</property>
		<property name="rowMapper">
			<bean class="org.springframework.jdbc.core.ColumnMapRowMapper" />
		</property>
	</bean>

	<bean id="cloudControllerUserProcessor" class="org.cloudfoundry.identity.uaa.scim.job.CloudControllerUserItemProcessor">
		<property name="dataSource" ref="uaaDataSource" />
		<property name="filterExisting" value="true" />
	</bean>

	<bean id="uaaUserProcessor" class="org.cloudfoundry.identity.uaa.scim.job.UaaUserItemProcessor" scope="step">
		<property name="dataSource" ref="cloudControllerDataSource" />
		<property name="filterExisting" value="true" />
	</bean>

	<bean id="lastModifiedFilter" class="org.cloudfoundry.identity.uaa.scim.job.CloudControllerLastModifiedFilterProcessor">
		<property name="dataSource" ref="uaaDataSource" />
	</bean>

	<bean id="uaaUserWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="uaaDataSource" />
		<property name="sql">
			<value>insert into users
				(id,created,lastModified,userName,email,password,givenName,familyName)
				values
				(:id,:created,:lastModified,:userName,:email,:password,:givenName,:familyName)
			</value>
		</property>
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.cloudfoundry.identity.uaa.scim.job.MapItemSqlParameterSourceProvider" />
		</property>
	</bean>

	<bean id="cloudControllerUserWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="cloudControllerDataSource" />
		<property name="sql">
			<value>insert into users
				(created_at,updated_at,email,crypted_password)
				values
				(:CREATED_AT,:UPDATED_AT,:EMAIL,:CRYPTED_PASSWORD)
			</value>
		</property>
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.cloudfoundry.identity.uaa.scim.job.MapItemSqlParameterSourceProvider" />
		</property>
	</bean>

	<bean id="uaaPasswordUpdater" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="uaaDataSource" />
		<property name="sql">
			<value>
				update users set
				version=:version,lastModified=:lastModified,password=:password
				where userName=:userName and password!=:password
			</value>
		</property>
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.cloudfoundry.identity.uaa.scim.job.MapItemSqlParameterSourceProvider" />
		</property>
		<property name="assertUpdates" value="false" />
	</bean>

	<bean id="uaaDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
	</bean>

	<bean id="cloudControllerDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${cloud_controller.database.driverClassName}" />
		<property name="url" value="${cloud_controller.database.url}" />
		<property name="username" value="${cloud_controller.database.username}" />
		<property name="password" value="${cloud_controller.database.password}" />
	</bean>

</beans>
