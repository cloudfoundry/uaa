<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 https://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd
        http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <sec:global-method-security pre-post-annotations="enabled"/>

    <bean id="approvalStore" class="org.cloudfoundry.identity.uaa.approval.JdbcApprovalStore">
        <constructor-arg ref="jdbcTemplate"/>
    </bean>

    <context:component-scan base-package="org.cloudfoundry.identity.uaa.approval" />

    <http name="approvalsSecurity" pattern="/approvals/**" create-session="stateless"
          authentication-manager-ref="emptyAuthenticationManager"
          entry-point-ref="oauthAuthenticationEntryPoint" access-decision-manager-ref="accessDecisionManager"
          use-expressions="false"
          xmlns="http://www.springframework.org/schema/security">
        <intercept-url pattern="/**" access="scope=oauth.approvals"/>
        <custom-filter ref="approvalsResourceAuthenticationFilter" position="PRE_AUTH_FILTER"/>
        <access-denied-handler ref="oauthAccessDeniedHandler"/>
        <csrf disabled="true"/>
    </http>

    <oauth:resource-server id="approvalsResourceAuthenticationFilter" token-services-ref="tokenServices"
                           resource-id="oauth" entry-point-ref="oauthAuthenticationEntryPoint"/>

</beans>