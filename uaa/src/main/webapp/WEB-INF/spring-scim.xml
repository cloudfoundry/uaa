<?xml version="1.0" encoding="UTF-8"?>
<!-- Cloud Foundry 2012.02.03 Beta Copyright (c) [2009-2012] VMware, Inc. All Rights Reserved. This product is licensed to 
	you under the Apache License, Version 2.0 (the "License"). You may not use this product except in compliance with the License. 
	This product includes a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents 
	is subject to the terms and conditions of the subcomponent's license, as noted in the LICENSE file. -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<bean id="scimUserProvisioning" class="org.cloudfoundry.identity.uaa.scim.JdbcScimUserProvisioning">
		<constructor-arg ref="jdbcTemplate" />
		<!-- Password validation turned off to match cloud controller policies -->
		<property name="passwordValidator">
            <bean class="org.cloudfoundry.identity.uaa.scim.ZxcvbnPasswordValidator">
                <property name="scoreCalculator" ref="zxcvbnScoreCalculator" />
            </bean>
        </property>
        <property name="deactivateOnDelete" value="${scim.delete.deactivate:true}" />
	</bean>

	<!-- Add a handler adapter with special knowledge of the ScimUser endpoints -->
	<bean class="org.cloudfoundry.identity.uaa.config.HandlerAdapterFactoryBean" />

	<bean id="scimUserEndpoints" class="org.cloudfoundry.identity.uaa.scim.ScimUserEndpoints">
		<property name="scimUserProvisioning" ref="scimUserProvisioning" />
		<property name="statuses">
			<map key-type="java.lang.Class" value-type="org.springframework.http.HttpStatus">
				<entry key="java.lang.IllegalArgumentException" value="BAD_REQUEST" />
				<entry key="java.lang.UnsupportedOperationException" value="BAD_REQUEST" />
				<entry key="org.cloudfoundry.identity.uaa.scim.InvalidPasswordException" value="BAD_REQUEST" />
				<entry key="org.cloudfoundry.identity.uaa.scim.InvalidUserException" value="BAD_REQUEST" />
				<entry key="org.cloudfoundry.identity.uaa.scim.UserNotFoundException" value="NOT_FOUND" />
				<entry key="org.springframework.jdbc.BadSqlGrammarException" value="BAD_REQUEST" />
			</map>
		</property>
		<property name="messageConverters">
			<bean class="org.cloudfoundry.identity.uaa.error.ExceptionReportHttpMessageConverter" />
		</property>
	</bean>

	<http pattern="/User/*/password" create-session="stateless" authentication-manager-ref="emptyAuthenticationManager"
		entry-point-ref="oauthAuthenticationEntryPoint" access-decision-manager-ref="accessDecisionManager"
		xmlns="http://www.springframework.org/schema/security">
		<intercept-url pattern="/User/*/password" access="IS_AUTHENTICATED_FULLY,scope=password.write" />
		<custom-filter ref="passwordResourceAuthenticationFilter" position="PRE_AUTH_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
	</http>

	<http request-matcher-ref="userEndPointRequestMatcher" create-session="stateless" authentication-manager-ref="emptyAuthenticationManager"
		entry-point-ref="oauthAuthenticationEntryPoint" access-decision-manager-ref="accessDecisionManager"
		xmlns="http://www.springframework.org/schema/security">
		<intercept-url pattern="/Users*" access="scope=scim.read" method="GET" />
		<intercept-url pattern="/User/**" access="scope=scim.read" method="GET" />
		<intercept-url pattern="/User/**" access="scope=scim.write" method="DELETE" />
		<intercept-url pattern="/User*" access="scope=scim.write" method="POST" />
		<intercept-url pattern="/User/**" access="scope=scim.write" method="PUT" />
		<custom-filter ref="scimResourceAuthenticationFilter" position="PRE_AUTH_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
	</http>

	<oauth:resource-server id="passwordResourceAuthenticationFilter" token-services-ref="tokenServices"
		resource-id="password" entry-point-ref="oauthAuthenticationEntryPoint" />

	<oauth:resource-server id="scimResourceAuthenticationFilter" token-services-ref="tokenServices"
		resource-id="scim" entry-point-ref="oauthAuthenticationEntryPoint" />

	<bean id="userEndPointRequestMatcher" class="org.cloudfoundry.identity.uaa.security.web.UaaRequestMatcher">
		<constructor-arg value="/User" />
	</bean>

	<bean id="scimUserBootstrap" class="org.cloudfoundry.identity.uaa.scim.ScimUserBootstrap">
		<constructor-arg ref="scimUserProvisioning" />
		<constructor-arg value="#{(@config['scim']==null or @config['scim']['users']==null)?new String[]{}:@config['scim']['users']}"/>
		<property name="override" value="${scim.user.override:false}" />
	</bean>

	<beans profile="default">

		<bean id="scimUserBootstrap" class="org.cloudfoundry.identity.uaa.scim.ScimUserBootstrap">
			<constructor-arg ref="scimUserProvisioning" />
			<constructor-arg value="#{(@config['scim']==null or @config['scim']['users']==null)?new String[]{}:@config['scim']['users']}"/>
			<property name="override" value="${scim.user.override:false}" />
		</bean>

	</beans>

</beans>
