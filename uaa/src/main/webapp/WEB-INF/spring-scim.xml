<?xml version="1.0" encoding="UTF-8"?>
<!--

    Cloud Foundry 2012.02.03 Beta
    Copyright (c) [2009-2012] VMware, Inc. All Rights Reserved.

    This product is licensed to you under the Apache License, Version 2.0 (the "License").
    You may not use this product except in compliance with the License.

    This product includes a number of subcomponents with
    separate copyright notices and license terms. Your use of these
    subcomponents is subject to the terms and conditions of the
    subcomponent's license, as noted in the LICENSE file.

-->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<bean id="userBootstrap" class="org.cloudfoundry.identity.uaa.user.JdbcUaaAdminUserBootstrap">
		<constructor-arg ref="jdbcTemplate" />
		<property name="username" value="${bootstrap.admin.username:admin}" />
		<property name="password" value="${bootstrap.admin.password:$2a$10$yHj1jr2NYpGC3wu/BTeFDOnD4Jz3K6ALd6XghGXPTCU4WMxKZuRHu}" />
		<property name="email" value="${bootstrap.admin.email:admin@localhost}" />
		<property name="familyName" value="${bootstrap.admin.family_name:User}" />
		<property name="givenName" value="${bootstrap.admin.given_name:Admin}" />
	</bean>

	<bean id="scimUserProvisioning" class="org.cloudfoundry.identity.uaa.scim.JdbcScimUserProvisioning">
		<constructor-arg ref="jdbcTemplate" />
	</bean>

	<!-- Add a handler adapter with special knowledge of the ScimUser endpoints -->
	<bean class="org.cloudfoundry.identity.uaa.config.HandlerAdapterFactoryBean" />

	<bean id="scimEndpoints" class="org.cloudfoundry.identity.uaa.scim.ScimUserEndpoints">
		<property name="scimUserProvisioning" ref="scimUserProvisioning" />
		<property name="statuses">
			<map key-type="java.lang.Class" value-type="org.springframework.http.HttpStatus">
				<entry key="java.lang.IllegalArgumentException" value="BAD_REQUEST" />
				<entry key="java.lang.UnsupportedOperationException" value="BAD_REQUEST" />
				<entry key="org.cloudfoundry.identity.uaa.scim.InvalidPasswordException" value="BAD_REQUEST" />
				<entry key="org.cloudfoundry.identity.uaa.scim.InvalidUserException" value="BAD_REQUEST" />
				<entry key="org.cloudfoundry.identity.uaa.scim.UserNotFoundException" value="NOT_FOUND" />
				<entry key="org.springframework.jdbc.BadSqlGrammarException" value="BAD_REQUEST" />
			</map>
		</property>
		<property name="messageConverters">
			<bean class="org.cloudfoundry.identity.uaa.error.ExceptionHttpMessageConverter" />
		</property>
	</bean>

	<http pattern="/User/*/password" create-session="stateless" authentication-manager-ref="emptyAuthenticationManager"
		entry-point-ref="oauthAuthenticationEntryPoint" access-decision-manager-ref="accessDecisionManager"
		xmlns="http://www.springframework.org/schema/security">
		<intercept-url pattern="/User/*/password" access="IS_AUTHENTICATED_FULLY,SCOPE_PASSWORD" />
		<custom-filter ref="passwordResourceAuthenticationFilter" position="PRE_AUTH_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
	</http>

	<http request-matcher-ref="userEndPointRequestMatcher" create-session="stateless" authentication-manager-ref="emptyAuthenticationManager"
		entry-point-ref="oauthAuthenticationEntryPoint" access-decision-manager-ref="accessDecisionManager"
		xmlns="http://www.springframework.org/schema/security">
		<intercept-url pattern="/Users*" access="ROLE_CLIENT,SCOPE_READ" method="GET" />
		<intercept-url pattern="/User/**" access="ROLE_CLIENT,SCOPE_READ" method="GET" />
		<intercept-url pattern="/User/**" access="ROLE_CLIENT,SCOPE_WRITE" method="DELETE" />
		<intercept-url pattern="/User*" access="ROLE_CLIENT,SCOPE_WRITE" method="POST" />
		<intercept-url pattern="/User/**" access="ROLE_CLIENT,SCOPE_WRITE" method="PUT" />
		<custom-filter ref="scimResourceAuthenticationFilter" position="PRE_AUTH_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
	</http>

	<oauth:resource-server id="passwordResourceAuthenticationFilter" token-services-ref="tokenServices"
		resource-id="password" />

	<oauth:resource-server id="scimResourceAuthenticationFilter" token-services-ref="tokenServices"
		resource-id="scim" />

	<bean id="userEndPointRequestMatcher" class="org.cloudfoundry.identity.uaa.security.web.UaaRequestMatcher">
		<constructor-arg value="/User" />
	</bean>

	<beans profile="default">

		<!-- Override scim provisioning so that passwords are not validated in test environments -->
		<bean id="scimUserProvisioning" class="org.cloudfoundry.identity.uaa.scim.JdbcScimUserProvisioning">
			<constructor-arg ref="jdbcTemplate" />
			<property name="passwordValidator">
				<bean class="org.cloudfoundry.identity.uaa.scim.NullPasswordValidator" />
			</property>
		</bean>

		<bean id="scimUserBootstrap" class="org.cloudfoundry.identity.uaa.scim.ScimUserBootstrap">
			<constructor-arg ref="scimUserProvisioning" />
			<constructor-arg>
				<list value-type="org.cloudfoundry.identity.uaa.user.UaaUser">
					<value>dale|password|olds@vmware.com|Dale|Olds</value>
					<value>joel|password|jdsa@vmware.com|Joel|D'Sa</value>
					<value>dave|password|dsyer@vmware.com|Dave|Syer</value>
					<value>luke|password|ltaylor@vmware.com|Luke|Taylor</value>
					<value>marissa|koala|marissa@test.org|Marissa|Bloggs</value>
				</list>
			</constructor-arg>
		</bean>

	</beans>

</beans>
