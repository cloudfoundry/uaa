#@ load("@ytt:data", "data")
#@yaml/text-templated-strings
#@ load("deployment_functions.star", "spring_profiles")

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uaa
  labels:
    app.kubernetes.io/name: "uaa"
    app.kubernetes.io/instance: "uaa-(@= data.values.labels.instance @)"
    app.kubernetes.io/version: "(@= data.values.version @)"
    app.kubernetes.io/component: "authorization-server"
    app.kubernetes.io/part-of: "(@= data.values.labels.partOf @)"
    app.kubernetes.io/managed-by: "(@= data.values.labels.managedBy @)"


spec:
  selector:
    matchLabels:
      app: uaa-deployment
  replicas: 1
  template:
    metadata:
      labels:
        app: uaa-deployment
    spec: #! pod spec
      containers:
        - name: uaa
          image: "cfidentity/uaa@sha256:93b70b26fbb3de88d93728b0daf1ea7b001fde89a24e283c3db36bf4c6af087c"
          ports:
            - name: http-uaa
              containerPort: 8080
              protocol: TCP
          env:
            - name: spring_profiles
              value: #@ spring_profiles(data.values.database.scheme)
            - name: UAA_CONFIG_PATH
              value: /etc/config
          volumeMounts:
          - name: uaa-config
            mountPath: /etc/config
          livenessProbe:
            httpGet:
              path: /healthz
              port: http-uaa
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: http-uaa
          startupProbe:
            httpGet:
              path: /healthz
              port: http-uaa
            failureThreshold: 20
            periodSeconds: 15
      volumes:
      - name: uaa-config
        configMap:
          name: uaa-config
