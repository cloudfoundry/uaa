#@ load("@ytt:data", "data")
#@ load("deployment_functions.star", "spring_profiles")
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uaa
  labels:
    app.kubernetes.io/name: "uaa"
    app.kubernetes.io/instance: #@ "uaa-" + data.values.labels.instance
    app.kubernetes.io/version: #@ data.values.version
    app.kubernetes.io/component: "authorization-server"
    app.kubernetes.io/part-of: #@ data.values.labels.partOf
    app.kubernetes.io/managed-by: #@ data.values.labels.managedBy
spec:
  selector:
    matchLabels:
      app: uaa-deployment
  replicas: 1
  template:
    metadata:
      labels:
        app: uaa-deployment
    spec: #! pod spec
      containers:
        - name: uaa
          image: #@ data.values.image
          ports:
            - name: http-uaa
              containerPort: 8080
              protocol: TCP
          env:
            - name: BPL_TOMCAT_ACCESS_LOGGING
              value: #@ data.values.tomcat.accessLoggingEnabled
            - name: JAVA_OPTS
              value: "-Djava.security.egd=file:/dev/./urandom -Dlogging.config=/etc/config/log4j2.properties"
            - name: spring_profiles
              value: #@ spring_profiles(data.values.database.scheme)
            - name: UAA_CONFIG_PATH
              value: /etc/config
          volumeMounts:
          - name: uaa-config
            mountPath: /etc/config
          livenessProbe:
            httpGet:
              path: /healthz
              port: http-uaa
            failureThreshold: 25
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /healthz
              port: http-uaa
      volumes:
      - name: uaa-config
        configMap:
          name: uaa-config
