apply(plugin: "war")

description = "CloudFoundry Identity Server JAR"

dependencies {
    implementation(project(":cloudfoundry-identity-metrics-data"))
    implementation(project(":cloudfoundry-identity-model"))

    implementation(libraries.tomcatJdbc)
    providedCompile(libraries.tomcatEmbed)

    implementation(libraries.jacksonDatabind)
    implementation(libraries.jsonPath) {
        exclude(module: "json-smart")
    }
    implementation(libraries.springBeans)
    implementation(libraries.springContext)
    implementation(libraries.springContextSupport)
    implementation(libraries.springTx)
    implementation(libraries.springJdbc)
    implementation(libraries.springWeb)
    implementation(libraries.springSecurityCore)
    implementation(libraries.springSecurityWeb)
    implementation(libraries.springBootStarterMail)
    implementation(libraries.owaspEsapi) {
        transitive = false
    }
//    implementation(libraries.springSecuritySaml) {
//        exclude(module: "bcprov-ext-jdk15on")
//        exclude(module: "xalan")
//    }
    implementation(libraries.jodaTime)
    implementation(libraries.xmlSecurity)
    implementation(libraries.springSessionJdbc)

    implementation(libraries.bouncyCastleProv)
    implementation(libraries.bouncyCastlePkix)

    implementation(libraries.guava)

    implementation(libraries.aspectJRt)
    implementation(libraries.aspectJWeaver)

    implementation(libraries.thymeLeaf) {
        exclude(module: "ognl")
    }
    implementation(libraries.thymeleafSpring5) {
        exclude(module: "ognl")
    }
    implementation(libraries.thymeleafDialect) {
        exclude(module: "ognl")
    }
    implementation(libraries.thymeleafExtrasSpringSecurity5) {
        exclude(module: "ognl")
    }

    implementation(libraries.unboundIdScimSdk) {
        exclude(module: "servlet-api")
        exclude(module: "commons-logging")
        exclude(module: "httpclient")
        exclude(module: "wink-client-apache-httpclient")
        exclude(module: "json")
    }

    implementation(libraries.hibernateValidator)
    implementation(libraries.flywayCore)
    implementation(libraries.mariaJdbcDriver)
    implementation(libraries.hsqldb)

    implementation(libraries.snakeyaml)

    implementation(libraries.springWebMvc)
    implementation(libraries.springSecurityLdap)
    implementation(libraries.springLdapCore)
    implementation(libraries.springLdapCoreTiger)
    implementation(libraries.apacheLdapApi) {
        exclude(module: "slf4j-api")
        exclude(module: "mina-core")
    }

    implementation(libraries.passay)

    implementation(libraries.velocity)
    implementation(libraries.xerces)

    implementation(libraries.slf4jImpl)
    implementation(libraries.log4jCore)

    implementation(libraries.javaxXmlBindApi)
    implementation(libraries.glassfishJaxb)

    implementation(libraries.nimbusJwt)
    implementation(libraries.orgJson)

    implementation(libraries.apacheHttpClient)

    testImplementation(project(":cloudfoundry-identity-model").sourceSets.test.output)

    testImplementation(libraries.springTest)

    testImplementation(libraries.junit)
    testImplementation(libraries.mockito)

    testImplementation(libraries.mockitoJunit5)

    testImplementation(libraries.postgresql)

    testImplementation(libraries.tomcatElApi)
    testImplementation(libraries.tomcatJasperEl)
    testImplementation(libraries.tomcatJdbc)

    testImplementation(libraries.jsonPathAssert)
    testImplementation(libraries.guavaTestLib)

    implementation(libraries.commonsIo)
}

configurations.all {
    exclude(group: "org.beanshell", module: "bsh-core")
    exclude(group: "org.apache-extras.beanshell", module: "bsh")
    exclude(group: "org.bouncycastle", module: "bcpkix-jdk15on")
    exclude(group: "org.bouncycastle", module: "bcprov-jdk15on")
    exclude(group: "com.fasterxml.woodstox", module: "woodstox-core")
    exclude(group: "commons-beanutils", module: "commons-beanutils")
    exclude(group: "commons-collections", module: "commons-collections")
}

jar {
    exclude("org/cloudfoundry/identity/uaa/web/tomcat/UaaStartupFailureListener.*")
}

processResources {
    //maven replaces project.artifactId in the log4j.properties file
    //https://www.pivotaltracker.com/story/show/74344574
    filter { line -> line.contains('${project.artifactId}') ? line.replace('${project.artifactId}', 'cloudfoundry-identity-server') : line }
}

integrationTest {}.onlyIf { //disable since we don't have any
    false
}

task tomcatListenerJar(type: Jar) {
    archiveBaseName = "tomcat-listener"
    from(sourceSets.main.output)
    include("org/cloudfoundry/identity/uaa/web/tomcat/UaaStartupFailureListener.*")
}

artifacts {
    archives(tomcatListenerJar)
}
